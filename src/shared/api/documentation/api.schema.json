{
  "openapi": "3.0.6",
  "info": {
    "title": "api-rest-acesso-usuario",
    "description": "Essa API tem como objetivo testar meus conhecimentos, em Back-End. Desenvolvido usando: NodeJS com TypeScript, ExpressJS, banco de dados PostgreSQL, TypeORM. Diferencial: Recuperação de senha via email",
    "contact": {
      "email": "edibertooliveira@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:3334",
      "description": "API base"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "summary": "Responsável pela criação dos usuários",
        "description": "Essa rota será responsável pela criação dos usúarios no banco de dados ",
        "operationId": "userController_create",
        "tags": [
          "Acesso"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/register"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/register_response"
                },
                "example": {
                  "id": "889ae8c3-8b31-44dd-a571-be96a15b283c",
                  "firstName": "user",
                  "lestName": "test",
                  "email": "user@gmail.com",
                  "created_at": "2021-08-13T02:21:57.097Z",
                  "updated_at": "2021-08-13T02:21:57.097Z",
                  "avatar_url": null
                }
              }
            }
          },
          "400": {
            "description": "Parâmetro inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error_validate"
                },
                "example": [
                  {
                    "statusCode": 400,
                    "error": "Bad Request",
                    "message": "celebrate request validation failed",
                    "validation": {
                      "body": {
                        "source": "body",
                        "keys": [
                          "email"
                        ],
                        "message": "\"email\" must be a valid email"
                      }
                    }
                  }
                ]
              }
            }
          },
          "409": {
            "description": "Já existe um usuário com este e-mail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error_api"
                },
                "example": {
                  "status": "error",
                  "message": "There is already one user with this email"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Responsável pelo acesso dos usuários",
        "description": "Cria acesso para um usuário registrado",
        "operationId": "SessionsController_access",
        "tags": [
          "Acesso"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/session"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/session_response"
                },
                "example": {
                  "id": "889ae8c3-8b31-44dd-a571-be96a15b283c",
                  "name": "user",
                  "email": "user@gmail.com",
                  "created_at": "2021-08-13T02:21:57.097Z",
                  "updated_at": "2021-08-13T02:21:57.097Z",
                  "avatar_url": null
                }
              }
            }
          },
          "400": {
            "description": "Parâmetro inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error_validate"
                },
                "example": {
                  "statusCode": 400,
                  "error": "Bad Request",
                  "message": "celebrate request validation failed",
                  "validation": {
                    "body": {
                      "source": "body",
                      "keys": [
                        "email"
                      ],
                      "message": "\"email\" must be a valid email"
                    }
                  }
                }
              }
            }
          },"401": {
            "description": "Combinação incorreta de e-mail / senha",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error_api"
                },
                "example": {
                  "status": "error",
                  "message": "Incorrect email/password combination"
                }
              }
            }
          }
        }
      }
    },
    "/password/forgot": {
      "post": {
        "summary": "Responsável solicitar a mudança de senha do usuários registrado",
        "description": "Solicita uma nova senha para o serviço de acesso da API",
        "operationId": "ForgotPasswordController_forgot",
        "tags": [
          "Acesso"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/password_forgot"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {},
                "example": {}
              }
            }
          },
          "400": {
            "description": "Parâmetro inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error_validate"
                },
                "example": {
                  "statusCode": 400,
                  "error": "Bad Request",
                  "message": "celebrate request validation failed",
                  "validation": {
                    "body": {
                      "source": "body",
                      "keys": [
                        "email"
                      ],
                      "message": "\"email\" must be a valid email"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "O usuário não existe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error_api"
                },
                "example": {
                  "status": "error",
                  "message": "User does not exists."
                }
              }
            }
          }
        }
      }
    },
    "/password/reset": {
      "post": {
        "summary": "Responsável pela troca de senha do usuários registrado",
        "description": "Necessario hash da solicitação de troca de senha, o usuário executa a trocar de senha",
        "operationId": "ResetPasswordController_reset",
        "tags": [
          "Acesso"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/password_reset"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {},
                "example": {}
              }
            }
          },
          "400": {
            "description": "Parâmetro inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error_validate"
                },
                "example": {
                  "statusCode": 400,
                  "error": "Bad Request",
                  "message": "celebrate request validation failed",
                  "validation": {
                    "body": {
                      "source": "body",
                      "keys": [
                        "token"
                      ],
                      "message": "\"token\" must be a valid GUID"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Erro envio do token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error_api"
                },
                "example": [
                  {
                    "status": "error",
                    "message": "JWT Token is missing."
                  },
                  {
                    "status": "error",
                    "message": "Token expired."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "summary": "Responsável por obter  o registro do usuário dono do token",
        "description": "Busca as informações do banco de dados do usuário dono do token de acesso",
        "operationId": "ProfileController_find",
        "tags": [
          "Perfil"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
              }
            }
          },

          "401": {
            "description": "Erro envio do token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error_api"
                },
                "example": [
                  {
                    "status": "error",
                    "message": "JWT Token is missing."
                  },
                  {
                    "status": "error",
                    "message": "Token expired."
                  }
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Responsável por alterar o registro do usuário dono do token",
        "description": "Modifica as informações do banco de dados do usuário dono do token de acesso",
        "operationId": "ProfileController_update",
        "tags": [
          "Perfil"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Movies list",
            "content": {
              "application/json": {
              }
            }
          },

          "401": {
            "description": "Erro envio do token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error_api"
                },
                "example": [
                  {
                    "status": "error",
                    "message": "JWT Token is missing."
                  },
                  {
                    "status": "error",
                    "message": "Token expired."
                  }
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Responsável por deletar o registro do usuário dono do token",
        "description": "Exclui/Bloqueia as informações do banco de dados do usuário dono do token de acesso",
        "operationId": "ProfileController_delete",
        "tags": [
          "Perfil"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
              }
            }
          },

          "401": {
            "description": "Erro envio do token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error_api"
                },
                "example": [
                  {
                    "status": "error",
                    "message": "JWT Token is missing."
                  },
                  {
                    "status": "error",
                    "message": "Token expired."
                  }
                ]
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Responsável por modificar a imagem de perfil do usuário dono do token",
        "description": "Adiciona/Troca a imagem salva no servidor do usuário dono do token de acesso",
        "operationId": "UsersAvatarController",
        "tags": [
          "Perfil"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
              }
            }
          },
          "401": {
            "description": "Erro envio do token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error_api"
                },
                "example": [
                  {
                    "status": "error",
                    "message": "JWT Token is missing."
                  },
                  {
                    "status": "error",
                    "message": "Token expired."
                  }
                ]
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "token": {
        "type": "string",
        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiY3VzdG9tZXIiLCJpYXQiOjE2Mjk3MTQxMzIsImV4cCI6MTYyOTgwMDUzMiwic3ViIjoiZDkwZmU5NTgtMzY4ZS00ZWVmLTg2MTItZjM3MWNmNDBkMDRkIn0.Nk-0DzUq8NGZbbAZd-3SWFZNjNwz2XWS9jlgyQielyk"      },
      "id": {
        "type": "string",
        "example": "d90fe958-368e-4eef-8612-f371cf40d04d"
      },
      "name": {
        "type": "string",
        "example": "John Doe"
      },
      "email": {
        "type": "string",
        "example": "john@mail.com"
      },
      "password": {
        "type": "string",
        "example": "12345#@$$%"
      },
      "avatar": {
        "type": "string",
        "example": "2740dfb75b87e672212c-IMG_20201208_162412556_MP~4.jpg"
      },
      "created_at": {
        "type": "string",
        "example": "2021-08-21T18:38:52.207Z"
      },
      "updated_at": {
        "type": "string",
        "example": "2021-08-21T18:38:52.207Z"
      },
      "avatar_url": {
        "type": "string",
        "example": null
      },
      "role": {
        "type": "string",
        "example": "customer"
      },
      "register": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "password": {
            "$ref": "#/components/schemas/password"
          }
        }
      },
      "session": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "password": {
            "$ref": "#/components/schemas/password"
          }
        }
      },
      "password_forgot": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/email"
          }
        }
      },
      "password_reset": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "4fc6e4e1-bc08-4b32-9805-53eb594d18c5"
          },
          "password": {
            "$ref": "#/components/schemas/password"
          },
          "password_confirmation": {
            "$ref": "#/components/schemas/password"
          }
        }
      },
      "register_response": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "role": {
            "$ref": "#/components/schemas/role"
          },
          "created_at": {
            "$ref": "#/components/schemas/created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/updated_at"
          },
          "avatar_url": {
            "$ref": "#/components/schemas/avatar_url"
          }
        }
      },
      "session_response": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/register_response"
          },
          "token": {
            "$ref": "#/components/schemas/token"
          }
        }
      },
      "Error_validate": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          },
          "error": {
            "type": "string"
          },
          "validation": {
            "type": "object"
          }
        }
      },
      "Error_api": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
